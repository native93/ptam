cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
rosbuild_genmsg()
#uncomment if you have defined services
rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})
#-I/usr/local/MATLAB/R2012a/extern/include -L/usr/local/MATLAB/R2012a/bin/glnxa64 -leng -lmx -lut -lmat -lmwresource_core -lmwfl -lmwi18n -lmwMATLAB_res

find_package( OpenCV REQUIRED )
include_directories (${PROJECT_SOURCE_DIR}/src/PTAM ${PROJECT_SOURCE_DIR}/src/JLinkage  /home/sarthak/Matlab/extern/include  )
link_directories (${PROJECT_SOURCE_DIR}/lib /home/sarthak/Matlab/bin/glnxa64 /usr/lib )
rosbuild_add_boost_directories()
set(CMAKE_CXX_FLAGS "-D_LINUX -D_REENNTRANT -Wall -O3 -march=nocona -msse3 -I/usr/local/include/gvars3 -I/home/sarthak/Matlab/extern/include  -fpermissive")# -std=gnu++0x")
rosbuild_add_executable(PTAM src/PTAM/main.cc src/PTAM/GLWindow2.cc src/PTAM/GLWindowMenu.cc src/PTAM/VideoSource.cc src/PTAM/System.cc  src/PTAM/ATANCamera.cc src/PTAM/KeyFrame.cc src/PTAM/MapPoint.cc src/PTAM/Map.cc src/PTAM/SmallBlurryImage.cc src/PTAM/ShiTomasi.cc  src/PTAM/HomographyInit.cc  src/PTAM/MapMaker.cc  src/PTAM/Bundle.cc  src/PTAM/PatchFinder.cc src/PTAM/Relocaliser.cc src/PTAM/MiniPatch.cc src/PTAM/MapViewer.cc src/PTAM/ARDriver.cc src/PTAM/EyeGame.cc src/PTAM/Tracker.cc src/JLinkage/JL1.cpp src/JLinkage/JLinkage.cpp src/JLinkage/RandomSampler.cpp  src/JLinkage/Utilities.cpp src/JLinkage/densify.cpp)
target_link_libraries (PTAM GVars3 cvd pthread /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1
 /usr/lib/liblapack.so.3gf ${OpenCV_LIBS})
rosbuild_link_boost(PTAM signals)


#rosbuild_add_executable(set_stereo_init_state_variables_server src/set_stereo_init_state_variables_server.cpp)
#rosbuild_add_executable(set_stereo_init_state_variables_client src/set_stereo_init_state_variables_client.cpp)
#rosbuild_add_executable(ptam_reset_server src/ptam_reset_server.cpp)
#rosbuild_add_executable(ptam_reset_client src/ptam_reset_client.cpp)


rosbuild_add_executable(cloud_to_scan src/cloud_to_scan.cpp)
rosbuild_add_executable(traj_opt src/traj_opt.cpp)
target_link_libraries(traj_opt eng mx ut mat mwresource_core mwfl mwi18n mwMATLAB_res)
#rosbuild_add_executable(RRT src/RRT.cpp)
#target_link_libraries(RRT eng mx ut mat mwresource_core mwfl mwi18n mwMATLAB_res)
#rosbuild_add_executable(move_robot src/move_robot.cpp)
#target_link_libraries(move_robot eng mx ut mat mwresource_core mwfl mwi18n mwMATLAB_res)
#rosbuild_add_executable(waypoints src/waypoints.cpp)
#target_link_libraries(waypoints eng mx ut mat mwresource_core mwfl mwi18n mwMATLAB_res)
rosbuild_add_executable(main src/main.cpp src/waypoints.cpp src/move_robot.cpp src/RRT.cpp)
target_link_libraries(main eng mx ut mat mwresource_core mwfl mwi18n mwMATLAB_res cvd)




rosbuild_add_executable(visib src/visibility.cpp)
rosbuild_add_executable(Visibility src/VisibilityCalculatorServer_real.cpp)
rosbuild_add_executable(cluster src/cluster.cpp)
rosbuild_add_executable(test_trans src/test_trans.cpp)
rosbuild_add_executable(Frontier src/FrontierExtractorServer_real.cpp)
rosbuild_add_executable(traj_check src/traj_check.cpp)
rosbuild_add_executable(vel_pub src/velocity.cpp)
rosbuild_add_executable(publish src/publish_3d.cpp)
rosbuild_add_executable(plane src/test.cpp)
rosbuild_add_executable(read_pcd src/read_point_cloud.cpp)
#rosbuild_add_executable(plane_extraction src/plane_extraction.cpp)
rosbuild_add_executable(mapping src/mapping_direct_node.cpp)
#target_link_libraries(test GVars3)
#rosbuild_add_executable(read src/read_point_cloud.cpp)

rosbuild_add_executable(map_pub src/map_pub.cpp)
find_package(VTK REQUIRED)
include(${VTK_USE_FILE})


rosbuild_add_executable(w_test src/waypoints_psuedo.cpp)
rosbuild_add_executable(o_test src/odom_extract.cpp)
#rosbuild_add_executable(plane_fin src/plane_hullCL1.cpp src/PTAM/ATANCamera.cc )
#target_link_libraries(plane_fin  ${VTK_LIBRARIES}   GVars3 cvd pthread /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1  /usr/lib/liblapack.so.3gf ${OpenCV_LIBS})

